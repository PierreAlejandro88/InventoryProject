version: "3"

services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVICE=nats://nats-server:4222
    depends_on:
      - nats-server

  products-ms:
    build: ./products-ms
    ports:
      - "3001:3001"
    volumes:
      - ./products-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=file:./dev.db
      - TRANSPORT=TCP

  orders-ms:
    build: ./orders-ms
    ports:
      - "3002:3002"
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - NATS_SERVER=nats://nats-server:4222
      - DATABASE_URL=postgresql://postgres:amores123@orders-db:5432/orders_db?schema=public
    depends_on:
      - orders-db

  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=amores123
      - POSTGRES_DB=orders_db

  payments-ms:
    container_name: payments-ms
    build: ./payments-ms
    ports:
     - ${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVER=nats://nats-server:4222
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - SUCCESS_PAYMENT_URL=${SUCCESS_PAYMENT_URL}
      - CANCELLED_PAYMENT_URL=${CANCELLED_PAYMENT_URL}
        

